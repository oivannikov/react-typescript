{"version":3,"sources":["components/Navbar/Navbar.tsx","components/TodoForm/TodoForm.tsx","components/TodoList/TodoList.tsx","pages/TodosPage/TodosPage.tsx","pages/AboutPage/AboutPage.tsx","App.tsx","index.tsx"],"names":["Navbar","className","href","to","TodoForm","onAdd","ref","useRef","type","id","placeholder","onKeyPress","event","key","current","value","htmlFor","TodoList","todos","onToggle","onRemove","length","map","todo","classes","completed","push","join","checked","onChange","bind","title","onClick","e","preventDefault","removeHandle","TodosPage","useState","setTodos","useEffect","saved","JSON","parse","localStorage","getItem","setItem","stringify","newTodo","Date","now","prev","confirm","filter","AboutPage","history","useHistory","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"gQAOaA,G,YAAmB,WAC9B,OACE,8BACE,sBAAKC,UAAU,kCAAf,UACE,mBAAGC,KAAK,IAAID,UAAU,aAAtB,gCACA,qBAAIA,UAAU,6BAAd,UACE,6BAAI,cAAC,IAAD,CAASE,GAAG,IAAZ,uEACJ,6BAAI,cAAC,IAAD,CAASA,GAAG,SAAZ,sF,wBCRDC,G,MAAoC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC5CC,EAAMC,iBAAyB,MASrC,OACE,sBAAKN,UAAU,kBAAf,UACE,uBACEK,IAAKA,EACLE,KAAK,OACLC,GAAG,QACHC,YAAY,uHACZC,WAdN,SAAyBC,GACL,UAAdA,EAAMC,MACRR,EAAMC,EAAIQ,QAASC,OACnBT,EAAIQ,QAASC,MAAQ,OAarB,uBAAOd,UAAU,SAASe,QAAQ,QAAlC,uICnBOC,G,MAAoC,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACnE,GAAqB,IAAjBF,EAAMG,OACR,OACE,oBAAIpB,UAAU,SAAd,+BASJ,OACE,6BACIiB,EAAMI,KAAI,SAAAC,GACV,IAAMC,EAAU,CAAC,QAMjB,OAJID,EAAKE,WACPD,EAAQE,KAAK,aAIb,oBAAIzB,UAAWuB,EAAQG,KAAK,KAA5B,SACE,kCACE,uBACEnB,KAAK,WACLoB,QAASL,EAAKE,UACdI,SAAUV,EAASW,KAAK,KAAMP,EAAKd,MAErC,+BAAOc,EAAKQ,QACZ,mBACE9B,UAAU,0BACV+B,QAAS,SAACC,GAAD,OAzBvB,SAAsBA,EAAqBxB,GACzCwB,EAAEC,iBACFd,EAASX,GAuBmB0B,CAAaF,EAAGV,EAAKd,KAFvC,wBARmCc,EAAKd,WCnBzC2B,EAAuB,WAAO,IAAD,EACdC,mBAAkB,IADJ,mBACjCnB,EADiC,KAC1BoB,EAD0B,KAGxCC,qBAAU,WACR,IAAMC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,MAE1DN,EAASE,KACR,IAEHD,qBAAU,WACRI,aAAaE,QAAQ,QAASJ,KAAKK,UAAU5B,MAC5C,CAACA,IA2BJ,OACE,qCACE,cAAC,EAAD,CAAUb,MA3Bd,SAAoB0B,GAClB,IAAMgB,EAAiB,CACrBhB,MAAOA,EACPtB,GAAIuC,KAAKC,MACTxB,WAAW,GAGba,GAAS,SAAAY,GAAI,OAAKH,GAAL,mBAAiBG,UAqB5B,cAAC,EAAD,CAAUhC,MAAOA,EAAOC,SAlBP,SAACV,GACpB6B,GAAS,SAAAY,GAAI,OACXA,EAAK5B,KAAI,SAAAC,GAAI,OACXA,EAAKd,KAAOA,EAAZ,2BAAqBc,GAArB,IAA2BE,WAAYF,EAAKE,YAAaF,SAeXH,SAXpD,SAAsBX,GACA0C,QAAQ,2MAG1Bb,GAAS,SAAAY,GAAI,OAAIA,EAAKE,QAAO,SAAA7B,GAAI,OAAIA,EAAKd,KAAOA,e,OCvC1C4C,EAAsB,WACjC,IAAMC,EAAUC,cAEhB,OACE,qCACE,+IACA,sCACA,wBAAQtD,UAAU,MAAM+B,QAAS,kBAAMsB,EAAQ5B,KAAK,MAApD,2HCiBS8B,EAnBO,WAEpB,OACE,qCACE,cAAC,EAAD,IACA,qBAAKvD,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwD,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,IAAD,CAAUvD,GAAG,aAGf,cAAC,IAAD,CAAOwD,UAAWvB,EAAWsB,KAAK,WAClC,cAAC,IAAD,CAAOC,UAAWN,EAAWK,KAAK,oBCd5CE,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ba45cc1d.chunk.js","sourcesContent":["import React from 'react';\n\nimport { NavLink } from 'react-router-dom';\n\nimport '../../index.css';\nimport './Navbar.css';\n\nexport const Navbar: React.FC = () => {\n  return (\n    <nav>\n      <div className=\"nav-wrapper purple darken-2 px1\">\n        <a href=\"/\" className=\"brand-logo\">React + Typescript</a>\n        <ul className=\"right hide-on-med-and-down\">\n          <li><NavLink to=\"/\">Список дел</NavLink></li>\n          <li><NavLink to=\"/about\">Информация</NavLink></li>\n        </ul>\n      </div>\n    </nav>\n  )\n}","import React, { useRef } from 'react';\n\nimport { TodoFormProps } from '../../interfaces';\n\nimport './TodoForm.css';\n\nexport const TodoForm: React.FC<TodoFormProps> = ({ onAdd }) => {\n  const ref = useRef<HTMLInputElement>(null);\n\n  function keyPressHandlee(event: React.KeyboardEvent) {  \n    if (event.key === 'Enter') {\n      onAdd(ref.current!.value);\n      ref.current!.value = '';\n    }\n  }\n\n  return (\n    <div className=\"input-field mt2\">\n      <input\n        ref={ref}\n        type=\"text\"\n        id=\"title\"\n        placeholder=\"Введите название дела\"\n        onKeyPress={keyPressHandlee}\n      />\n      <label className=\"active\" htmlFor=\"title\">Введите название дела</label>\n    </div>\n  )\n}\n\n","import React from 'react';\n\nimport { TodoListProps } from '../../interfaces';\n\nimport './TodoList.css';\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos, onToggle, onRemove }) => {  \n  if (todos.length === 0) {\n    return (\n      <h1 className=\"center\">Please add todo: </h1>\n    )\n  }\n\n  function removeHandle(e: React.MouseEvent, id: number) {\n    e.preventDefault();\n    onRemove(id);\n  }\n\n  return (\n    <ul>\n      { todos.map(todo => {\n        const classes = ['todo'];\n\n        if (todo.completed) {\n          classes.push('completed');\n        }\n        \n        return (\n          <li className={classes.join(' ')} key={todo.id}>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={todo.completed}\n                onChange={onToggle.bind(null, todo.id)}\n              />\n              <span>{todo.title}</span>\n              <i\n                className=\"material-icons red-text\"\n                onClick={(e) => removeHandle(e, todo.id)}\n              >\n                delete\n              </i>\n            </label>\n          </li>\n        )\n      })}\n    </ul>\n  ); \n}\n\n","import React,  { useState, useEffect } from \"react\";\n\nimport { TodoForm } from \"../../components/TodoForm/TodoForm\";\nimport { TodoList } from \"../../components/TodoList/TodoList\";\n\nimport { ITodo } from \"../../interfaces\";\n\ndeclare var confirm: (qustion: string) => boolean;\n\nexport const TodosPage: React.FC  = () => {\n  const [todos, setTodos] = useState<ITodo[]>([]);\n\n  useEffect(() => {\n    const saved = JSON.parse(localStorage.getItem('todos') || '[]') as ITodo[];\n\n    setTodos(saved);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  function addHandler(title: string) {\n    const newTodo: ITodo = {\n      title: title,\n      id: Date.now(),\n      completed: false,\n    }\n\n    setTodos(prev => [newTodo, ...prev]);\n  }\n\n  const handleToggle = (id: number) => {    \n    setTodos(prev => \n      prev.map(todo =>\n        todo.id === id ? {...todo, completed: !todo.completed} : todo,\n      ));    \n  }\n\n  function handleRemove(id: number) {\n    const shoudRemove = confirm('Вы уверены что хотите удалить элемент?');\n\n    if (shoudRemove) {\n      setTodos(prev => prev.filter(todo => todo.id !== id));\n    }\n  }\n  \n  return (\n    <>\n      <TodoForm onAdd={addHandler} />\n      <TodoList todos={todos} onToggle={handleToggle} onRemove={handleRemove} />\n    </>\n  );\n}\n","import React from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\n\nexport const AboutPage: React.FC = () => {\n  const history = useHistory();\n\n  return (\n    <>\n      <h1>Страница информации</h1>\n      <p>Title</p>\n      <button className=\"btn\" onClick={() => history.push('/')}>Обратно к списку дел</button>\n    </>\n  );\n}\n","import React from 'react';\n\nimport { Navbar } from './components/Navbar/Navbar';\nimport { TodosPage } from './pages/TodosPage/TodosPage';\n\nimport { Route, BrowserRouter, Switch, Redirect } from 'react-router-dom';\n\nimport { AboutPage } from './pages/AboutPage/AboutPage';\n\nconst App: React.FC = () => {\n  \n  return (\n    <>\n      <Navbar />\n      <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect to=\"/todos\"/>\n          </Route>\n          \n          <Route component={TodosPage} path=\"/todos\" />\n          <Route component={AboutPage} path=\"/about\" />\n        </Switch>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}